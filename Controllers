import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class BuyerController {

    private static final String JDBC_URL = "jdbc:mysql://localhost:3306/bits_bids"; // Replace with your database URL
    private static final String JDBC_USER = "your_username"; // Replace with your database username
    private static final String JDBC_PASSWORD = "your_password"; // Replace with your database password

    // JDBC Connection
    private Connection getConnection() throws SQLException {
        return DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASSWORD);
    }

    // Retrieve a Buyer by username
    public Buyer getBuyerByUsername(String username) {
        String sql = "SELECT * FROM buyers WHERE username = ?";
        try (Connection connection = getConnection();
             PreparedStatement statement = connection.prepareStatement(sql)) {
            statement.setString(1, username);
            try (ResultSet resultSet = statement.executeQuery()) {
                if (resultSet.next()) {
                    return mapResultSetToBuyer(resultSet);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace(); // Handle the exception appropriately
        }
        return null;
    }

    // Retrieve all Buyers
    public List<Buyer> getAllBuyers() {
        List<Buyer> buyers = new ArrayList<>();
        String sql = "SELECT * FROM buyers";
        try (Connection connection = getConnection();
             PreparedStatement statement = connection.prepareStatement(sql);
             ResultSet resultSet = statement.executeQuery()) {
            while (resultSet.next()) {
                buyers.add(mapResultSetToBuyer(resultSet));
            }
        } catch (SQLException e) {
            e.printStackTrace(); // Handle the exception appropriately
        }
        return buyers;
    }

    // Insert a new Buyer
    public void insertBuyer(Buyer buyer) {
        String sql = "INSERT INTO buyers (username, bitscoin_balance) VALUES (?, ?)";
        try (Connection connection = getConnection();
             PreparedStatement statement = connection.prepareStatement(sql)) {
            statement.setString(1, buyer.getUsername());
            statement.setInt(2, buyer.getBitscoinBalance());
            statement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace(); // Handle the exception appropriately
        }
    }

    // Update bitscoin balance for a Buyer
    public void updateBitscoinBalance(Buyer buyer, int newBalance) {
        String sql = "UPDATE buyers SET bitscoin_balance = ? WHERE buyer_id = ?";
        try (Connection connection = getConnection();
             PreparedStatement statement = connection.prepareStatement(sql)) {
            statement.setInt(1, newBalance);
            statement.setInt(2, buyer.getBuyerId());
            statement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace(); // Handle the exception appropriately
        }
    }

    // Helper method to map ResultSet to Buyer object
    private Buyer mapResultSetToBuyer(ResultSet resultSet) throws SQLException {
        int buyerId = resultSet.getInt("buyer_id");
        String buyerUsername = resultSet.getString("username");
        int bitscoinBalance = resultSet.getInt("bitscoin_balance");

        return new Buyer(buyerId, buyerUsername, bitscoinBalance, null, null);
    }
}
